name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-3
  AWS_ACCOUNT_ID: 311535938619

permissions:
      id-token: write
      contents: read

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/frontend

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'


      - name: Install dependencies
        run:  npm install

      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: https://chitchaat-backend.pauldejean.dev

      - name: Configure AWS credentials
        uses:  aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::311535938619:role/GithubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 sync ./out s3://chitchaat


  deploy_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/backend

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        uses:  aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::311535938619:role/GithubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('packages/backend/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-


      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/packages/backend
          push: true
          tags: |
            311535938619.dkr.ecr.eu-west-3.amazonaws.com/chitchaat:${{ github.sha }}
            311535938619.dkr.ecr.eu-west-3.amazonaws.com/chitchaat:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max


      - name: Update docker container
        run: >
          aws ssm send-command
          --document-name "AWS-RunShellScript"
          --document-version "1"
          --targets '[{"Key":"InstanceIds","Values":["i-03c11ed340a6c1577"]}]'
          --parameters '{"workingDirectory":[""],"executionTimeout":["3600"],"commands":[
          "aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin 311535938619.dkr.ecr.eu-west-3.amazonaws.com",
          "docker pull 311535938619.dkr.ecr.eu-west-3.amazonaws.com/chitchaat:${{ github.sha }}",
          "docker ps -aq --filter name=backend | xargs -r docker stop",
          "docker ps -aq --filter name=backend | xargs -r docker rm",
          "docker run --name backend -d -p [::]:80:3001 -p [::]:10000-10100:10000-10100/udp -e MEDIASOUP_ANNOUNCED_IP_V6=\"2a05:d012:b0d:b30b:fa95:e34a:9e00:684b\" 311535938619.dkr.ecr.eu-west-3.amazonaws.com/chitchaat:${{ github.sha }}"]}'
          --timeout-seconds 600
          --max-concurrency "50"
          --max-errors "0"
          --region $AWS_REGION